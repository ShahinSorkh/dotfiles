#!/usr/bin/zsh
# vim: ts=4 sw=4 sts=4 et ai si sta

CMD="$0"
usage () {
    echo "USAGE: $CMD [-d] { -c COMMAND | -f COMMAND_FILE } HOSTS"
    echo "    -d                Detach after executing command [Optional]"
    echo "    -c                Command to execute in \`sh\` syntax"
    echo "    -f                Command file to execute in \`sh\` syntax"
    echo "    HOSTS             The hosts to execute command(s) on, separated by space"
    exit ${1:-0}
}

I=0
while getopts hdc:f: name "$@"; do
    case $name in
        h) usage;;
        d) I=$(( I - 1 ))
            DETACHED=1;;
        f) I=$(( I + 1 ))
            CMD_FILE="$HOME/code/PROJECTS/path/to/cmd/dir/$OPTARG"
            if [ ! -f "$CMD_FILE" ]; then
                echo $'\e[;31m''[ERR]'$'\e[;00m'" file $OPTARG not found" >&2
                usage 101
            fi
            SCRIPT="$(cat "$CMD_FILE")";;
        c) I=$(( I + 1 ))
            SCRIPT="$OPTARG";;
    esac
    I=$(( I + 1 ))
    I=$(( I + 1 ))
done
i=1; while (( i < I )); do shift; i=$(( i + 1 )) done; unset i

if [ -z "$SCRIPT" ]; then
    echo $'\e[;31m''[ERR]'$'\e[;00m'' you must specify [-c COMMAND] or [-f COMMAND_FILE]' >&2
    usage 102
fi

if [[ ${#@} -lt 1 ]]; then
    echo $'\e[;31m''[ERR]'$'\e[;00m'' you must enter hosts as arguments' >&2
    usage 103
fi

bar='-'
bars="$(printf $bar'%.0s' $(seq 1 20))"
for h in "$@"; do
    echo "\e[0;32m $bars{ \e[1;33m${h}\e[0;32m }$bars\e[;00m"
    if [ "$DETACHED" = "1" ]; then
        ssh -f >/dev/null "${h}" "${SCRIPT}"
    else
        ssh -t "${h}" "${SCRIPT}"
    fi
    echo "\e[0;32m ${bars}${bar}${bar}$(printf $bar'%.0s' $(seq 1 ${#h}))${bar}${bar}${bars}\e[;00m"
done

exit 0
